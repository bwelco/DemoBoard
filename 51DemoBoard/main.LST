C51 COMPILER V9.52.0.0   MAIN                                                              09/15/2015 14:57:01 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <myhead.h>
   2          
   3          // int T  温度
   4          // int R 湿度  使用gettemperature();后可以打印出温湿度的值
   5          int recv_lock = 0;
   6          unsigned char flag1 = 0,flag2 = 0,temp1,temp2;
   7          char strbuf[50] = {0};
   8          int posi = 0;
   9          int temp_lock = 0;
  10          int card_id_posi = 0;
  11          char cardid[20] = {0};
  12          char cardid_temp[20];
  13          
  14          char tab1[20];
  15          char tab2[20];
  16          
  17          int temp_max = 100;
  18          int temp_min = -40;
  19          int light_max = 99999;
  20          int light_min = -1;
  21          int humi_max = 100;
  22          int humi_min = 0;
  23          
  24          int temp_max_flag = 0;
  25          int temp_min_flag = 0;
  26          
  27          int light_max_flag = 0;
  28          int light_min_flag = 0;
  29          
  30          int humi_max_flag = 0;
  31          int humi_min_flag = 0;
  32          
  33          int redlight_flag = 0;
  34          int sound_flag = 0;
  35          
  36          int steer_flag = 0;
  37          int card_flag = 0;
  38          char led_set[4];
  39          char setcard_buf[20];
  40          int steer_degree = 0;
  41          
  42          int lock_2 = 0;
  43          int lock_3 = 0;
  44          int card_flag_c = 0;
  45          int delay_flag = 0;
  46          int testflag = 0;
  47          int main()
  48          {       
  49   1              bpm = 0;
  50   1          system_init();      
  51   1              sendstr("Programme starting...\n");
  52   1              
  53   1              while(1)
  54   1              {               
  55   2                      while(recv_lock != 1)
C51 COMPILER V9.52.0.0   MAIN                                                              09/15/2015 14:57:01 PAGE 2   

  56   2                      {
  57   3                              if(redlight_flag == 1)
  58   3                              {
  59   4                                      if(redlight == 1)
  60   4                                          bpm = 1;
  61   4                                      else
  62   4                                              bpm = 0;
  63   4                              }
  64   3                              if(mykey == 0)
  65   3                              {
  66   4                                      //sound_delay();
  67   4                                      if(mykey == 0)
  68   4                                      {
  69   5                                              while(lock_2 == 1);
  70   5                                              lock_3 = 1;
  71   5                                              
  72   5                                              bpm = 1;
  73   5                                              stop_interrupt();
  74   5                                              pwm_value = turn(90);
  75   5                                              InitSteering();
  76   5                                              interrupt1_lock = 1;
  77   5                                              interrupt3_lock = 1;
  78   5                                              
  79   5                                              delay_ms_steering(1000);
  80   5                                              delay_ms_steering(1000);
  81   5                                              delay_ms_steering(500);
  82   5                                              StopSteering();
  83   5                                              start_interrupt();
  84   5                                              sendstr("OK\n");
  85   5                                              interrupt1_lock = 0;
  86   5                                              interrupt3_lock = 0;
  87   5                                              bpm = 0;
  88   5                                              
  89   5                                              lock_3 = 0;
  90   5                                      }
  91   4                              }
  92   3                              if(sound_key == 0 && sound_flag == 1)
  93   3                              {
  94   4                                      //sound_delay();
  95   4                                      if(sound_key == 0)
  96   4                                      {
  97   5                                      //      out1 = 0;
  98   5                                      //      sprintf(send_message, "out1 = 0\n");
  99   5                                      //      sendstr(send_message);
 100   5                                      //      sound_key = 1;
 101   5                                              
 102   5                                              if(testflag == 0)
 103   5                                              {
 104   6                                                      out1 = 0;
 105   6                                                  sprintf(send_message, "out1 = 0\n");
 106   6                                                  sendstr(send_message);
 107   6                                                  sound_key = 1;
 108   6                                                      testflag = 1;
 109   6                                                      continue;
 110   6                                              }
 111   5                                              if(testflag == 1)
 112   5                                              {
 113   6                                                      out1 = 1;
 114   6                                                  sprintf(send_message, "out1 = 1\n");
 115   6                                                  sendstr(send_message);
 116   6                                                  sound_key = 1;
 117   6                                                      testflag = 0;
C51 COMPILER V9.52.0.0   MAIN                                                              09/15/2015 14:57:01 PAGE 3   

 118   6                                                      continue;
 119   6                                              }
 120   5                                              /*if(testflag == 0)
 121   5                                              {
 122   5                                                      red = led_set[0] - '0';
 123   5                                                      green = led_set[1]- '0';
 124   5                                                      blue = led_set[2] - '0';        
 125   5                                                      testflag = 1;
 126   5                                                      delay_ms_steering(1000);
 127   5                                              //      delay_ms_steering(1000);
 128   5                                                      delay_ms_steering(500);
 129   5                                              }
 130   5                                              
 131   5                                              if(testflag == 1)
 132   5                                              {
 133   5                                                      red = 1;
 134   5                                                      green = 1;
 135   5                                                      blue = 1;       
 136   5                                                      testflag = 0;
 137   5                                                      delay_ms_steering(1000);
 138   5                                                      //delay_ms_steering(1000);
 139   5                                                      delay_ms_steering(500);
 140   5                                              }*/
 141   5                                      }
 142   4                                      
 143   4                  }
 144   3                              
 145   3                              if(temp_min_flag == 1 && temp_min > (int)TH)
 146   3                              {
 147   4                                      out1 = 0;
 148   4                                      sprintf(send_message, "out1 = 0\n");    //温度 < 下线值  输出1开
 149   4                                      sendstr(send_message);
 150   4                              }
 151   3                              
 152   3                              
 153   3                              if(temp_max_flag == 1 && (int)TH > temp_max)
 154   3                              {
 155   4                                      out1 = 1;
 156   4                                      sprintf(send_message, "out1 = 1\n");    //温度 > 上限值  输出1关
 157   4                                      sendstr(send_message);
 158   4                              }
 159   3                              
 160   3                              if(humi_max_flag == 1 && (int)RH > humi_max)
 161   3                              {
 162   4                                      out2 = 0;
 163   4                                      sprintf(send_message, "out2 = 1\n");    //湿度 > 上限值  输出2关
 164   4                                      sendstr(send_message);
 165   4                              }
 166   3                              
 167   3                              if(humi_min_flag == 1 && (int)RH < humi_min)
 168   3                              {
 169   4                                      out2 = 1;
 170   4                                      sprintf(send_message, "out2 = 0\n");    //湿度 < 下限值  输出2开
 171   4                                      sendstr(send_message);
 172   4                              }
 173   3                              
 174   3                              if(light_min_flag == 1 && light_compare < light_min)
 175   3                              {
 176   4                                      out3 = 0;
 177   4                                      sprintf(send_message, "out3 = 0\n");    //光照 < 下限值  输出3开
 178   4                                      sendstr(send_message);
 179   4                                      
C51 COMPILER V9.52.0.0   MAIN                                                              09/15/2015 14:57:01 PAGE 4   

 180   4                                      red = led_set[0] - '0';
 181   4                              green = led_set[1]- '0';
 182   4                              blue = led_set[2] - '0';                
 183   4                              }
 184   3                              
 185   3                              if(light_max_flag == 1 && light_compare > light_max)
 186   3                              {
 187   4                                      out3 = 1;
 188   4                                      sprintf(send_message, "out3 = 1\n");    //光照 > 上限值  输出3关
 189   4                                      sendstr(send_message);
 190   4                                      
 191   4                                      red = 1;
 192   4                              green = 1;
 193   4                              blue = 1;       
 194   4                              }
 195   3                              
 196   3                              //if(card_flag_c == 1)
 197   3                              //{
 198   3                              //      //android_control_lcd1602();
 199   3                              //      card_flag_c = 0;
 200   3                              //}
 201   3                              
 202   3                              //if(android_flag == 0)
 203   3                              //{
 204   3                              //      normal_lcd1602_show();
 205   3                              //}
 206   3                              /*
 207   3                              if(delay_flag == 1 && flag2 == 0)
 208   3                              {
 209   3                                      CR = 0;
 210   3                                      IE2  =  IE2 | 0X00;
 211   3                                      normal_lcd1602_show();
 212   3                                      delay_ms_steering(1000);
 213   3                                      delay_ms_steering(1000);
 214   3                                      delay_ms_steering(500);
 215   3                                      delay_flag = 0;
 216   3                                      IE2  =  IE2 | 0X01;
 217   3                                      PCA_init();
 218   3                              }
 219   3                              */
 220   3                              if(flag2 == 1)
 221   3                              {
 222   4                                      if(android_flag == 1)
 223   4                                      {
 224   5                                              sprintf(send_message, "card id = %s\n", cardid);
 225   5                                              sendstr(send_message);
 226   5                                      }
 227   4                                      if(strcmp(cardid, setcard_buf) != 0)
 228   4                                      {
 229   5                                              continue;
 230   5                                      }
 231   4                                      if(steer_flag == 1 && card_flag == 1 && 
 232   4                                              (strcmp(cardid, setcard_buf) == 0))
 233   4                                      {
 234   5                                              while(lock_2 == 1);
 235   5                                              lock_3 = 1;
 236   5                                              
 237   5                                              bpm = 1;
 238   5                                              stop_interrupt();
 239   5                                              pwm_value = turn(steer_degree);
 240   5                                              InitSteering();
 241   5                                              interrupt1_lock = 1;
C51 COMPILER V9.52.0.0   MAIN                                                              09/15/2015 14:57:01 PAGE 5   

 242   5                                              interrupt3_lock = 1;
 243   5                                              
 244   5                                              delay_ms_steering(1000);
 245   5                                              delay_ms_steering(1000);
 246   5                                              delay_ms_steering(500);
 247   5                                              StopSteering();
 248   5                                              start_interrupt();
 249   5                                              sendstr("OK\n");
 250   5                                              interrupt1_lock = 0;
 251   5                                              interrupt3_lock = 0;
 252   5                                              bpm = 0;
 253   5                                              
 254   5                                              lock_3 = 0;
 255   5                                              
 256   5                      }
 257   4                                      stop_interrupt();
 258   4                              //      Delay500ms();
 259   4                                      //Delay500ms();
 260   4                                      
 261   4                                      while(S2CON&S2RI)
 262   4                                      {
 263   5                                              S2CON&=~S2RI;
 264   5                                              temp2=S2BUF;
 265   5                                      }
 266   4                                      flag2 = 0;
 267   4                                      start_interrupt();
 268   4                                      
 269   4                              }
 270   3              }
 271   2                      handle_message();
 272   2                      recv_lock = 0;
 273   2                      
 274   2              }
 275   1      }
 276          
 277          void sound_delay(unsigned int z)
 278          {                                                                                                                                                                                          
 279   1          unsigned int i,j;
 280   1          for(i=z;i>0;i--)
 281   1              for(j=110;j>0;j--);
 282   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1107    ----
   CONSTANT SIZE    =    101    ----
   XDATA SIZE       =    210    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
