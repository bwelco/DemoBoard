C51 COMPILER V9.00   LIGHT                                                                 02/12/2016 18:09:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LIGHT
OBJECT MODULE PLACED IN light.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE light.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <myhead.h>
   2          
   3          BYTE    BUF[8];                         //接收数据缓存区        
   4          uchar   ge,shi,bai,qian,wan;            //显示变量
   5          int     dis_data;            //变量
   6          char ledstr2[50];
   7          
   8          char ledstr[50];
   9          int light_compare = 0;
  10          //*********************************************************
  11          void conversion(uint temp_data)  //  数据转换出 个，十，百，千，万
  12          {  
  13   1          wan=temp_data/10000+0x30 ;
  14   1          temp_data=temp_data%10000;   //取余运算
  15   1              qian=temp_data/1000+0x30 ;
  16   1          temp_data=temp_data%1000;    //取余运算
  17   1          bai=temp_data/100+0x30   ;
  18   1          temp_data=temp_data%100;     //取余运算
  19   1          shi=temp_data/10+0x30    ;
  20   1          temp_data=temp_data%10;      //取余运算
  21   1          ge=temp_data+0x30;  
  22   1      }
  23          
  24          //毫秒延时**************************
  25          void delay_nms(unsigned int k)  
  26          {                                               
  27   1      unsigned int i;         
  28   1       unsigned char a,b;     
  29   1      for(i=0;i<k;i++)
  30   1      {                       
  31   2       for(b=18;b>0;b--)
  32   2              for(a=152;a>0;a--);
  33   2          _nop_();  //if Keil,require use intrins.h   
  34   2      }       
  35   1      }
  36          
  37          /*******************************/
  38          
  39          /**************************************
  40          延时5微秒(STC90C52RC@12M)
  41          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
  42          当改用1T的MCU时,请调整此延时函数
  43          **************************************/
  44          void Delay5us()
  45          {
  46   1           unsigned char a;
  47   1          for(a=12;a>0;a--);
  48   1          _nop_();  //if Keil,require use intrins.h
  49   1      }
  50          
  51          /**************************************
  52          延时5毫秒(STC90C52RC@12M)
  53          不同的工作环境,需要调整此函数
  54          当改用1T的MCU时,请调整此延时函数
  55          **************************************/
C51 COMPILER V9.00   LIGHT                                                                 02/12/2016 18:09:30 PAGE 2   

  56          void Delay5ms()
  57          {
  58   1          unsigned char a,b;
  59   1          for(b=97;b>0;b--)
  60   1              for(a=141;a>0;a--);
  61   1      }
  62          
  63          /**************************************
  64          起始信号
  65          **************************************/
  66          void BH1750_Start()
  67          {
  68   1          SDA = 1;                    //拉高数据线
  69   1          SCL = 1;                    //拉高时钟线
  70   1          Delay5us();                 //延时
  71   1          SDA = 0;                    //产生下降沿
  72   1          Delay5us();                 //延时
  73   1          SCL = 0;                    //拉低时钟线
  74   1      }
  75          
  76          /**************************************
  77          停止信号
  78          **************************************/
  79          void BH1750_Stop()
  80          {
  81   1          SDA = 0;                    //拉低数据线
  82   1          SCL = 1;                    //拉高时钟线
  83   1          Delay5us();                 //延时
  84   1          SDA = 1;                    //产生上升沿
  85   1          Delay5us();                 //延时
  86   1      }
  87          
  88          /**************************************
  89          发送应答信号
  90          入口参数:ack (0:ACK 1:NAK)
  91          **************************************/
  92          void BH1750_SendACK(bit ack)
  93          {
  94   1          SDA = ack;                  //写应答信号
  95   1          SCL = 1;                    //拉高时钟线
  96   1          Delay5us();                 //延时
  97   1          SCL = 0;                    //拉低时钟线
  98   1          Delay5us();                 //延时
  99   1      }
 100          
 101          /**************************************
 102          接收应答信号
 103          **************************************/
 104          bit BH1750_RecvACK()
 105          {
 106   1          SCL = 1;                    //拉高时钟线
 107   1          Delay5us();                 //延时
 108   1          CY = SDA;                   //读应答信号
 109   1          SCL = 0;                    //拉低时钟线
 110   1          Delay5us();                 //延时
 111   1      
 112   1          return CY;
 113   1      }
 114          
 115          /**************************************
 116          向IIC总线发送一个字节数据
 117          **************************************/
C51 COMPILER V9.00   LIGHT                                                                 02/12/2016 18:09:30 PAGE 3   

 118          void BH1750_SendByte(BYTE dat)
 119          {
 120   1          BYTE i;
 121   1      
 122   1          for (i=0; i<8; i++)         //8位计数器
 123   1          {
 124   2              dat <<= 1;              //移出数据的最高位
 125   2              SDA = CY;               //送数据口
 126   2              SCL = 1;                //拉高时钟线
 127   2              Delay5us();             //延时
 128   2              SCL = 0;                //拉低时钟线
 129   2              Delay5us();             //延时
 130   2          }
 131   1          BH1750_RecvACK();
 132   1      }
 133          
 134          /**************************************
 135          从IIC总线接收一个字节数据
 136          **************************************/
 137          BYTE BH1750_RecvByte()
 138          {
 139   1          BYTE i;
 140   1          BYTE dat = 0;
 141   1      
 142   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 143   1          for (i=0; i<8; i++)         //8位计数器
 144   1          {
 145   2              dat <<= 1;
 146   2              SCL = 1;                //拉高时钟线
 147   2              Delay5us();             //延时
 148   2              dat |= SDA;             //读数据               
 149   2              SCL = 0;                //拉低时钟线
 150   2              Delay5us();             //延时
 151   2          }
 152   1          return dat;
 153   1      }
 154          
 155          //*********************************
 156          
 157          void Single_Write_BH1750(uchar REG_Address)
 158          {
 159   1          BH1750_Start();                  //起始信号
 160   1          BH1750_SendByte(SlaveAddress);   //发送设备地址+写信号
 161   1          BH1750_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 162   1        //  BH1750_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 163   1          BH1750_Stop();                   //发送停止信号
 164   1      }
 165          
 166          //********单字节读取*****************************************
 167          /*
 168          uchar Single_Read_BH1750(uchar REG_Address)
 169          {  uchar REG_data;
 170              BH1750_Start();                          //起始信号
 171              BH1750_SendByte(SlaveAddress);           //发送设备地址+写信号
 172              BH1750_SendByte(REG_Address);                   //发送存储单元地址，从0开始 
 173              BH1750_Start();                          //起始信号
 174              BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 175              REG_data=BH1750_RecvByte();              //读出寄存器数据
 176                  BH1750_SendACK(1);   
 177                  BH1750_Stop();                           //停止信号
 178              return REG_data; 
 179          }
C51 COMPILER V9.00   LIGHT                                                                 02/12/2016 18:09:30 PAGE 4   

 180          */
 181          //*********************************************************
 182          //
 183          //连续读出BH1750内部数据
 184          //
 185          //*********************************************************
 186          void Multiple_read_BH1750(void)
 187          {   uchar i;    
 188   1          BH1750_Start();                          //起始信号
 189   1          BH1750_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 190   1              
 191   1               for (i=0; i<3; i++)                      //连续读取6个地址数据，存储中BUF
 192   1          {
 193   2              BUF[i] = BH1750_RecvByte();          //BUF[0]存储0x32地址中的数据
 194   2              if (i == 3)
 195   2              {
 196   3      
 197   3                 BH1750_SendACK(1);                //最后一个数据需要回NOACK
 198   3              }
 199   2              else
 200   2              {               
 201   3                BH1750_SendACK(0);                //回应ACK
 202   3             }
 203   2         }
 204   1      
 205   1          BH1750_Stop();                          //停止信号
 206   1          Delay5ms();
 207   1      }
 208          
 209           
 210          //初始化BH1750，根据需要请参考pdf进行修改****
 211          void Init_BH1750()
 212          {
 213   1         Single_Write_BH1750(0x01);  
 214   1      
 215   1      }
 216          
 217          void getled()
 218          {
 219   1              float temp;
 220   1              Init_BH1750(); 
 221   1          Single_Write_BH1750(0x01);      // power on
 222   1          Single_Write_BH1750(0x10);      // H- resolution mode
 223   1          delay_nms(180);                 //延时180ms
 224   1          Multiple_Read_BH1750();         //连续读出数据，存储在BUF中
 225   1          dis_data=BUF[0];
 226   1          dis_data=(dis_data<<8)+BUF[1];  //合成数据     
 227   1          temp=(float)dis_data/1.2;
 228   1      
 229   1          conversion(temp);               //计算数据和显示
 230   1              light_compare = (wan-'0') * 10000 + (qian-'0') * 1000 + (bai-'0') * 100 + (shi-'0') * 10 + (ge-'0');
 231   1              sprintf(ledstr, "*light = %d#\n",light_compare);
 232   1          sprintf(ledstr2, "Light = %d", light_compare);
 233   1      }
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    628    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =    117    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.00   LIGHT                                                                 02/12/2016 18:09:30 PAGE 5   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
